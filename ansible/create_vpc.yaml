---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      region: "us-east-1"
  tasks: 
    - name: Create VPC
      ec2_vpc_net:
        name: Module5
        region: us-east-1
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        state: present
      register: vpc
    - name: debug
      debug: var=vpc
    - name: Create Public Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        az: us-east-1a
        tags: 
          Name: M5-public-1
          Module: 5
        cidr: 10.10.0.0/24
        state: present 
      register: public_subnet
    - name: Create Public Subnet2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        az: us-east-1b
        tags:
          Name: M5-public-2
          Module: 5
        cidr: 10.10.3.0/24
        state: present
      register: public_subnet2
    - name: Create Private Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        az: us-east-1a
        tags:
          Name: M5-private-1
          Module: 5
        cidr: 10.10.1.0/24
        state: present       
      register: private_subnet1 
    - name: Create Private Subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        az: us-east-1b
        tags:
          Name: M5-private-2
          Module: 5
        cidr: 10.10.2.0/24
        state: present
      register: private_subnet2
    - name: Create IGW
      ec2_vpc_igw:
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5 gateway
        state: present
      register: igw
    - name: Create NAT Gateway
      ec2_vpc_nat_gateway:
       region: us-east-1
       subnet_id: "{{ public_subnet.subnet.id }}"
       wait: yes
       if_exist_do_not_create: true
       state: present
      register: nat_gateway 
    - name: Create Public Route Table
      ec2_vpc_route_table:
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5-public-rt
        subnets:
          - "{{ public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"  
        state: present
      register: public_rt      
    - name: Create Private Route Table
      ec2_vpc_route_table:
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Module5-private-rt
        subnets:
          - "{{ private_subnet1.subnet.id }}"
          - "{{ private_subnet2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway.nat_gateway_id }}"
        state: present
      register: private_rt
    - name: Create Developer Security Group
      ec2_group:
        region: us-east-1
        name: Module5-developer-sg
        description: developer security group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
            - 22
            - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all to ports 22 and 80
          - proto: tcp
            ports:
            - 5000
            cidr_ip: 98.20.129.31/32
        state: present
      register: M5_developer_sg
    - name: Create Mododule5-postgres-tag-sg
      ec2_group:
        region: us-east-1
        name: Module5-postgres-tag-sg
        description: M5 postgres-tag sg
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
      register: M5_postgres_tag
    - name: Create Module5-postgres-sg
      ec2_group:
        region: us-east-1
        name: Module5-postgres-sg
        description: M5 postgres sg
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 5432
            group_id: "{{ M5_postgres_tag.group_id }}"
        state: present
      register: M5_postgres
    - name: Define Module5-postgres-tag-sg
      ec2_group:
        region: us-east-1
        name: Module5-postgres-tag-sg
        description: M5 postgres-tag sg
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 5432
            group_id: "{{ M5_postgres.group_id }}"
        state: present
      register: M5_postgres_tag 
    - name: Create Default SG
      ec2_group:
        region: us-east-1
        name: Default SG
        description: M5 default sg for rds
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
        state: present
      register: M5_default_sg
    - name: Create Default SG
      ec2_group:
        region: us-east-1
        name: Default SG
        description: M5 default sg for rds
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
          - proto: all
            from_port: 10050
            to_port: 10050
            group_id: "{{ M5_default_sg.group_id }}"
        state: present
      register: M5_default_sg
    - name: Create Public ACL
      ec2_vpc_nacl:
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        name: public-acl
        subnets: "{{ public_subnet.subnet.id }}"
        tags:
          Name: Module5-Public-acl
        
        ingress:
            #rule no, protocol, allow/deny, cidr, icmp_type, icmp_code, port from, port to
            - [100, 'tcp', 'allow', '98.20.129.31/32', null, null, 5000, 5000]
            - [101, 'tcp', 'allow', '24.196.25.139/32', null, null, 5000, 5000]
            - [102, 'tcp', 'allow', '24.239.105.213/32', null, null, 5000, 5000]
            - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
            - [300, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432]
            - [400, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
            - [450, 'tcp', 'allow', '24.196.25.139/32', null, null, 443, 443]
            - [455, 'tcp', 'allow', '24.239.105.213/32', null, null, 443, 443]
            - [460, 'tcp', 'allow', '98.20.129.31/32', null, null, 443, 443]
            - [900, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        egress:
            - [500, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
            - [600, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
            - [900, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        state: 'present'
    - name: Create Private ACL
      ec2_vpc_nacl:
        region: us-east-1
        vpc_id: "{{ vpc.vpc.id }}"
        name: private-acl
        subnets: ["{{ private_subnet1.subnet.id }}", "{{ private_subnet2.subnet.id }}"]
        tags:
          Name: Module5-Private-acl

        ingress:
            #rule no, protocol, allow/deny, cidr, icmp_type, icmp_code, port fr$
            - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432]
            - [200, 'tcp', 'allow', '10.10.0.0/16', null, null, 1024, 65535]
            - [300, 'tcp', 'allow', '10.10.0.0/16', null, null, 443, 443]
        egress:
            - [200, 'tcp', 'allow', '10.10.0.0/16', null, null, 443, 443]
            - [900, 'tcp', 'allow', '10.10.0.0/16', null, null, 1024, 65535]
        state: 'present'
    - name: Create RDS Subnet Group
      rds_subnet_group:
        region: us-east-1
        state: present
        name: rds_subnet_group
        description: subnet group for rds
        subnets:
          - "{{ private_subnet1.subnet.id }}"
          - "{{ private_subnet2.subnet.id }}"
      register: rds_subnet_group
#   - name: Create_ig_RDS
#        rds:
#        instance_name: M5-ig-db
#        db_name: M5_ig_db
#        subnet: "{{ rds_subnet_group.subnet_group.name }}"
#        region: us-east-1
#        zone: us-east-1b
#        db_engine: postgres
#        size: 20
#        instance_type: db.t2.micro
#        username: postgres
#        password: password
#        vpc_security_groups: ["{{ M5_postgres.group_id }}", "{{ M5_default_sg.group_id }}"]
#        tags:
#          Module: 5
#          Name: M5_ig_db
#      register: M5_ig_db
    - local_action:
        module: rds
        command: restore
        snapshot: m5-snapshot
        instance_name: M5-image-gallery-db
        region: us-east-1
        zone: us-east-1b
        subnet: rds_subnet_group
        publicly_accessible: yes
        wait: yes
        wait_timeout: 600
        tags:
          Name: M5_ig_db
      register: rds
    - local_action:
        module: rds
        command: modify
        instance_name: M5-image-gallery-db
        region: us-east-1
        vpc_security_groups:
          - "{{ M5_postgres.group_id }}"
          - "{{ M5_default_sg.group_id }}"



 
